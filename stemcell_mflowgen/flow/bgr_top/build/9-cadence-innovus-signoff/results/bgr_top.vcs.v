/*
###############################################################
#  Generated by:      Cadence Innovus 20.13-s083_1
#  OS:                Linux x86_64(Host ID rice-503-20-north)
#  Generated on:      Tue May 17 00:42:49 2022
#  Design:            bgr_top
#  Command:           saveNetlist -excludeLeafCell results/bgr_top.vcs.v
###############################################################
*/
module amplifier (
	va, 
	vb, 
	vc);
   output va;
   output vb;
   output vc;

   // Internal wires
   wire vg;
   wire vq;
   wire vx;
   wire VDD;
   wire VSS;

   sky130_asc_pfet_01v8_lvt_6 M4 (.GATE(vg),
	.SOURCE(VDD),
	.DRAIN(vg));
   sky130_asc_pfet_01v8_lvt_6 M8 (.GATE(vg),
	.SOURCE(VDD),
	.DRAIN(vc));
   sky130_asc_nfet_01v8_lvt_9 M9 (.GATE(vb),
	.SOURCE(vq),
	.DRAIN(vg));
   sky130_asc_nfet_01v8_lvt_9 M5 (.GATE(va),
	.SOURCE(vq),
	.DRAIN(vc));
   sky130_asc_nfet_01v8_lvt_1 M6 (.GATE(vx),
	.SOURCE(VSS),
	.DRAIN(vq));
   sky130_asc_nfet_01v8_lvt_1 M7 (.GATE(vx),
	.SOURCE(VSS),
	.DRAIN(vx));
   sky130_asc_pfet_01v8_lvt_12 M13 (.GATE(vc),
	.SOURCE(VDD),
	.DRAIN(vx));
endmodule

module core (
	ground, 
	va, 
	vb);
   input ground;
   output va;
   output vb;

   // Internal wires
   wire vbneg;
   wire l6;
   wire l7;
   wire l8;
   wire l10;
   wire l11;
   wire l1;
   wire l2;
   wire l4;
   wire l5;
   wire l12;

   resistor R6 (.rin(va),
	.rout(l6));
   resistor_SPC_1 R7 (.rin(l6),
	.rout(l7));
   resistor_SPC_2 R8 (.rin(l7),
	.rout(l8));
   resistor_SPC_3 R10 (.rin(l8),
	.rout(l10));
   resistor_SPC_4 R11 (.rin(l10),
	.rout(l11));
   sky130_asc_res_xhigh_po_2p85_2 R9 (.Rin(l11),
	.Rout(ground));
   sky130_asc_pnp_05v5_W3p40L3p40_1 pnp_va (.Emitter(va),
	.Base(ground),
	.Collector(ground));
   resistor_SPC_5 R3 (.rin(vb),
	.rout(vbneg));
   pnp_array pnp_vb (.emitter(vbneg),
	.base(ground));
   resistor_SPC_6 R1 (.rin(l1),
	.rout(vb));
   resistor_SPC_7 R2 (.rin(l1),
	.rout(l2));
   resistor_SPC_8 R4 (.rin(l2),
	.rout(l4));
   resistor_SPC_9 R5 (.rin(l4),
	.rout(l5));
   resistor_SPC_10 R12 (.rin(l5),
	.rout(l12));
   sky130_asc_res_xhigh_po_2p85_2 R13 (.Rin(l12),
	.Rout(ground));
endmodule

module resistor (
	rin, 
	rout);
   input rin;
   output rout;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(rout));
endmodule

module resistor_SPC_1 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_2 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_3 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_4 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_5 (
	rin, 
	rout);
   input rin;
   output rout;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(rout));
endmodule

module resistor_SPC_6 (
	rin, 
	rout);
   input rin;
   output rout;

   // Internal wires
   wire l;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(l));
   sky130_asc_res_xhigh_po_2p85_1 sub2 (.Rin(l),
	.Rout(rout));
endmodule

module resistor_SPC_7 (
	rin, 
	rout);
   input rin;
   output rout;

   // Internal wires
   wire l;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(l));
   sky130_asc_res_xhigh_po_2p85_1 sub2 (.Rin(l),
	.Rout(rout));
endmodule

module resistor_SPC_8 (
	rin, 
	rout);
   input rin;
   output rout;

   // Internal wires
   wire l;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(l));
   sky130_asc_res_xhigh_po_2p85_1 sub2 (.Rin(l),
	.Rout(rout));
endmodule

module resistor_SPC_9 (
	rin, 
	rout);
   input rin;
   output rout;

   // Internal wires
   wire l;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(l));
   sky130_asc_res_xhigh_po_2p85_1 sub2 (.Rin(l),
	.Rout(rout));
endmodule

module resistor_SPC_10 (
	rin, 
	rout);
   input rin;
   output rout;

   // Internal wires
   wire l;

   sky130_asc_res_xhigh_po_2p85_1 sub1 (.Rin(rin),
	.Rout(l));
   sky130_asc_res_xhigh_po_2p85_1 sub2 (.Rin(l),
	.Rout(rout));
endmodule

module resistor_SPC_11 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_12 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_13 (
	rin, 
	rout);
   input rin;
   output rout;

   assign rout = rin ;
endmodule

module resistor_SPC_14 (
	rin, 
	rout);
   input rin;
   output rout;

   sky130_asc_res_xhigh_po_2p85_1 sub2 (.Rin(rin),
	.Rout(rout));
endmodule

module pnp_array (
	emitter, 
	base);
   input emitter;
   output base;

   sky130_asc_pnp_05v5_W3p40L3p40_8 b1 (.Emitter(emitter),
	.Base(base));
   sky130_asc_pnp_05v5_W3p40L3p40_8 b2 (.Emitter(emitter),
	.Base(base));
   sky130_asc_pnp_05v5_W3p40L3p40_8 b3 (.Emitter(emitter),
	.Base(base));
   sky130_asc_pnp_05v5_W3p40L3p40_8 b4 (.Emitter(emitter),
	.Base(base));
   sky130_asc_pnp_05v5_W3p40L3p40_8 b5 (.Emitter(emitter),
	.Base(base));
endmodule

module current_mirror (
	va, 
	vb, 
	vc, 
	vbg);
   input va;
   input vb;
   input vc;
   output vbg;

   // Internal wires
   wire VDD;

   sky130_asc_pfet_01v8_lvt_12 M17 (.GATE(VDD),
	.SOURCE(VDD),
	.DRAIN(va));
   sky130_asc_pfet_01v8_lvt_60 M1 (.GATE(vc),
	.SOURCE(VDD),
	.DRAIN(va));
   sky130_asc_pfet_01v8_lvt_60 M2 (.GATE(vc),
	.SOURCE(VDD),
	.DRAIN(vb));
   sky130_asc_pfet_01v8_lvt_60 M3 (.GATE(vc),
	.SOURCE(VDD),
	.DRAIN(vbg));
endmodule

module bgr_top (
	porst, 
	va, 
	vb, 
	vbg);
   input porst;
   output va;
   output vb;
   output vbg;

   // Internal wires
   wire VSS;
   wire ground;
   wire vc;
   wire l17;
   wire l18;
   wire l19;
   wire l20;

   assign ground = VSS ;

   amplifier amp (.va(va),
	.vb(vb),
	.vc(vc));
   core BGR_Core (.ground(ground),
	.va(va),
	.vb(vb));
   current_mirror CM (.va(va),
	.vb(vb),
	.vc(vc),
	.vbg(vbg));
   sky130_asc_nfet_01v8_lvt_9 M10 (.GATE(porst),
	.SOURCE(VSS),
	.DRAIN(vc));
   resistor_SPC_11 R17 (.rin(vbg),
	.rout(l17));
   resistor_SPC_12 R18 (.rin(l17),
	.rout(l18));
   resistor_SPC_13 R19 (.rin(l18),
	.rout(l19));
   resistor_SPC_14 R20 (.rin(l19),
	.rout(l20));
   sky130_asc_res R21 (.Rin(l20),
	.Rout(VSS));
endmodule

